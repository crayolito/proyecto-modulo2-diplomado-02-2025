name: 'üóëÔ∏è Destroy Infrastructure'

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "destroy" to confirm'
        required: true
        type: string

env:
  TF_VERSION: '1.6.0'
  WORKING_DIR: './environments/dev'

jobs:
  destroy:
    name: 'üóëÔ∏è Terraform Destroy'
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_destroy == 'destroy'
    # Remover o cambiar environment si est√° bloqueando
    # environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.WORKING_DIR }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}  # ‚Üê AGREGAR

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      working-directory: ${{ env.WORKING_DIR }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}  # ‚Üê AGREGAR
        # Verificar nombres exactos de secrets:
        TF_VAR_project_name: ${{ secrets.TF_VAR_PROJECT_NAME }}  # ‚Üê CAMBIAR
        TF_VAR_environment: ${{ secrets.TF_VAR_ENVIRONMENT }}    # ‚Üê CAMBIAR